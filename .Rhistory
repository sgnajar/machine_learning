rm(list=ls())
graphics.off()
setwd("D:\\Documents\\GitHub\\machine_learning")
myData <- "ST000003_peaks_table.csv"
myData
data_in <- read.csv(file=myData, header=TRUE)
data_in
dataForAnalysisA <- data_in[1:144, 8:26]
dataForAnalysisA
rm(list=ls())
graphics.off()
clear
rm(list=ls())
graphics.off()
setwd("D:\\Documents\\GitHub\\machine_learning")
myData <- "ST000003_peaks_table.csv"
data_in <- read.csv(file=myData, header=TRUE)
re.kmeans <- kmeans(x=dataForAnalysisA, centers=dataForAnalysisA[1:2,], algorithm="Lloyd")
dataForAnalysisA <- data_in[1:144, 8:26]
dataForAnalysisA
# first: do the PCA
re <- princomp(dataForAnalysisA, cor=FALSE)
#screeplot
plot(re$sdev^2,
pch=16, cex=1, col="blue",
main="Scree plot",
xlab="PCA index", ylab="eigenvalues")
# scores plot
plot(re$scores[,1], re$scores[,2],
pch=16, cex=1, col="blue",
xlab="PC1", ylab="PC2",
main="PCA scores plot")
# loading plot
plot(re$loadings[, 1], re$loadings[, 2],
asp=1,
pch=16, cex=1, col="blue",
xlab="PC1", ylab="PC2",
main="Loadings plot")
# loading plot
plot(re$loadings[, 1], re$loadings[, 2],
asp=1,
pch=16, cex=1, col="blue",
xlab="PC1", ylab="PC2",
main="Loadings plot")
re.kmeans <- kmeans(x=dataForAnalysisA, centers=dataForAnalysisA[1:2,], algorithm="Lloyd")
re.kmeans$size
re.PCA <- prcomp(x=dataForAnalysisA, scale=F) #change to T
plot(re.PCA$sdev^2,
pch=16, cex=1,
xlab="PC number", ylab="variance",
main="scree plot after standardization of variables")
